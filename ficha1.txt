//##############Exercício 1###################
console.log("Exercício 1")
var lista = repeat(10, flip) // Lista de 10 elementos (lista[n] = true || false)
//console.log(lista)

// Contar os verdadeiros
var num_of_true = sum(lista) // true = 1 && false = 0 soma todos os elementos da lista
console.log(num_of_true)

// Todos verdadeiros?
console.log("São todos verdadeiro?", all(function(x){return x==true}, lista))

//Algum verdadeiro
console.log("Algum é verdaeiro?", any(function(x){return x==true}, lista))
//############################################


//##############Exercício 2###################
console.log("Exercício 2")
//Função sem a capacidade de viciar a moeda
var moeda = function(){
  return flip()? "Head" : "Tail"
}

// Função geral para criar um moeda com um dado peso, as moedas podem ser viciadas
var make_coin = function(peso){
  // peso associado à prob de sair "head"
  return function() {
    flip(peso)? "Head" : "Tail"
  }
}

// Criar uma moeda nao viciada 50/50
var normal_coin = make_coin(0.5)

//Criação do histograma
viz.hist(repeat(1000, moeda))
//############################################


//##############Exercício 3###################
console.log("Exercício 3")
// Função geral para criar um moeda com um dado peso, as moedas podem ser viciadas
var make_coin = function(peso){
  return function() {
    flip(peso)? "Head" : "Tail"
  }
}

// Criar uma moeda viciada 70/30
var normal_coin = make_coin(0.3)

//Criação de uma tabela onde dá a probabilidade de sair cara ou coroa
viz.table(repeat(1000, normal_coin))
//############################################


//##############Exercício 4###################
console.log("Exercício 4.1")
/////////////////////USANDO O FLIP/////////////////////
// Função geral para criar um moeda com um dado peso, as moedas podem ser viciadas
var make_coin = function(peso){
  return function() {
    flip(peso)? "Head" : "Tail"
  }
}

//Função que retorna o número de caras após lancar a moeda 5x
var coins = function(){
  //Criar um moeda viciada
  var coin = make_coin(0.42)
  //Criar um conjunto de n moedas
  var moedas = repeat(5, coin)
  //Função que cria uma nova lista de moedas num formato binário true=1 && false=1
  var moedas_bin = map(function(x) {return x=="Head"}, moedas)
  //Contar o numero de "Head"s
  var num_Head = sum(moedas_bin)
  return num_Head
}


//Criação do Histograma
//var moedas = coins(5) // Dúvida
//console.log(moedas)
//var moedas_hist = repeat(10,moedas)

//Repetir 100x o lancamento de 5 moedas e contar o numero de vezes que saiu cára
var moedas_hist = repeat(1000, coins)

//Criação de um histograma
viz(moedas_hist, {xLabel:("Número de Caras"), yLabel:("\"Probabilidade\"")})

/////////////////////USANDO O BIN/////////////////////
//(Ver Melhor na aula)
console.log("Exercício 4.2")
//Distribuição binominal (Cara ou Coroa)
var pol_dist = Binomial({p: 0.5, n: 5})

//Criação de um histograma
viz(pol_dist, {xLabel:("Número de Caras"), yLabel:("\"Probabilidade\"")})
//############################################

//##############Exercício 5###################
console.log("Exercício 5")

//Função que retorna o numero num dado [1-6]
var dado = function(){
  var r = randomInteger(6) + 1 //randomInteger devolve um inteiro [1-6]
  return r
}

//Lancar o dado 1000x
var dados = repeat(1000, dado)

//Criação de um histograma
viz(dados, {xLabel:("Valor do dado"), yLabel:("\"Probabilidade\"")})
//############################################

//##############Exercício 6###################